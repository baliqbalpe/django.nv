name: Django                           # workflow name

on:
  push:
    branches:                                 # similar to "only" in GitLab
      - main

jobs:
  build:
    runs-on: ubuntu-22.04                     # similar to "image" in GitLab
    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py check

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py test taskManager

  trivy:
    name: trivy/ci
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: docker run --rm -v "${PWD}:/src" hysnsec/trivy fs . -f json -o trivy-report.json || true
      - uses: actions/upload-artifact@v4
        with:
          name: trivy
          path: trivy-report.json
        continue-on-error: true             # allow the build to fail, similar to "allow_failure: true" in GitLab
        if: always()                        # what is this for?

  integration:
    runs-on: ubuntu-22.04
    needs: trivy
    steps:
      - run: echo "This is an integration step"
      - run: exit 1
        continue-on-error: true

  prod:
    runs-on: ubuntu-22.04
    needs: integration
    steps:
      - run: echo "This is a deploy step."
